ğŸ§© EASY (1â€“15): Core Loops, Lists, Strings, Conditionals

1. Write a function is_even(n) that returns True if a number is even.

def is_even(n):
   if(n % 2 == 0):
      return True
   else:
      return False

2. Write a function sum_list(lst) that returns the sum of all elements.

def sum_list(lst):
   total = 0
   for x in lst:
      total += x
   return total

3. Write a function count_vowels(s) that returns how many vowels are in a string.

def count_vowels(s):
   count = 0 
   for x in s:
      if(x == 'a' or x == 'e' or x == 'i' or x == 'o' or x == 'u'):
         count += 1
   return count

4. Write a function max_of_two(a, b) that returns the larger number.

def max_of_two(a, b):
   if(a > b):
      return a
   else: 
      return b

5. Write a function square_list(lst) that returns a new list of each element squared.

def square_list(lst):
   lstsq = []
   for x in lst:
      lstsq.append(x**2)
   return lstsq

6. Write a function count_positives(lst) that counts how many positive numbers are in a list.

def count_positives(lst):
   count = 0
   for x in lst:
      if(x > 0)
         count += 1
   return count
7. Write a function find_min(lst) that manually returns the smallest number.

def find_min(lst):
   min = 0
   for x in lst:
      if(x <  

8. Write a function reverse_string(s) that returns the reverse of a string.

def reverse_string(s):
   a = ''
   i = len(s) - 1
   while(i >= 0):
      a.join(s[i])
      i -= 1
   return a
9. Write a function multiply_list(lst) that multiplies all numbers in a list.

def multiply_list(lst):
   total = 1
   for x in lst:
      total *= x

10. Write a function is_leap_year(year) that returns True if the year is a leap year.

def is_leap_year(year):
   ?

11. Write a function sum_digits(n) that returns the sum of all digits in an integer.

def sum_digits(n):
    i = n
    total = 0
    while(i > 0):
       n // 10

12. Write a function count_spaces(s) that counts how many spaces are in a string.

def count_spaces(s):
    count = 0
    for x in s:
       if(x == ' '):
          count += 0

13. Write a function list_contains(lst, target) that returns True if the target appears in the list.

    def list_contains(lst, target):
       for x in lst:
          if x == target)
             return True
          else:
             return False

14. Write a function average(lst) that returns the average of numbers in a list.

def average(lst):
    count = len(lst) 
    total = 0
    for x in lst:
       total += x
    return total / count

15. Write a function first_and_last(lst) that returns a tuple of the first and last elements.

def first_and_last(lst):
    tup = ()
    length = len(lst) - 1
    i = 0
    while(i < length):
       if(i == 0 or i == length):
          tup.append(lst[i])
    return tup


